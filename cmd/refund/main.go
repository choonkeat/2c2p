package main

import (
	"context"
	"flag"
	"fmt"
	"log"
	"os"

	api2c2p "github.com/choonkeat/2c2p"
)

func main() {
	var (
		merchantID          = flag.String("merchantID", "", "Merchant ID")
		secretKey           = flag.String("secretKey", "", "Secret Key")
		invoiceNo           = flag.String("invoiceNo", "", "Invoice number of the transaction to refund")
		amount              = flag.Float64("amount", 0.0, "Amount to refund")
		privateKeyFile      = flag.String("privateKey", "dist/combined_private_public.pem", "Path to combined private key and certificate PEM file generated by cli/server-to-server-key/main.go")
		serverPublicKeyFile = flag.String("serverPublicKey", "dist/sandbox-jwt-2c2p.demo.2.1(public).cer", "Path to 2C2P's public key certificate (.cer file)")
	)
	flag.Parse()

	// Validate required flags
	if *merchantID == "" || *secretKey == "" || *invoiceNo == "" || *amount <= 0 {
		flag.Usage()
		os.Exit(1)
	}

	// Create client
	client := api2c2p.NewClient(api2c2p.Config{
		SecretKey:           *secretKey,
		MerchantID:          *merchantID,
		PrivateKeyFile:      *privateKeyFile,
		ServerPublicKeyFile: *serverPublicKeyFile,
	})

	// Process refund
	resp, err := client.Refund(context.Background(), *invoiceNo, *amount)
	if err != nil {
		log.Fatalf("Failed to process refund: %v", err)
	}

	// Print response
	fmt.Printf("Response Code: %s\n", resp.RespCode)
	fmt.Printf("Response Description: %s\n", resp.RespDesc)
}
